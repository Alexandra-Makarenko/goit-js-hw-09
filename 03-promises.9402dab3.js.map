{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBA0B3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA/BPR,EAAKgB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBACF,MAAMC,EAASC,OAAOf,EAAYgB,OAClC,IAAIC,EAAaF,OAAOjB,EAAWkB,OACnC,MAAME,EAAOH,OAAOhB,EAAUiB,OAC9B,GAAIF,EAAS,GAAKG,EAAa,GAAKC,EAAO,EACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,IACvBlB,EAAckB,EAAE,EAAGF,GAAYG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACpDkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAC7DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBvB,QAAeC,UAE/Dc,GAAcC,OAGdG,EAAA5B,GAAS6B,OAAOG,QAAQ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form')\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\n\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  let firstdelay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  if (amount > 0 && firstdelay > 0 && step > 0) {\n    for (let i = 0; i < amount; i++) {\n         createPromise(i+1, firstdelay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    firstdelay += step;\n  }\n  } else {\n    Notiflix.Notify.failure('Please, insert another values');\n  }\n  \n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay)\n\n  }\n  )\n\n}"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amount","Number","value","firstdelay","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.9402dab3.js.map"}